[tool.poetry]
name = "mo_smtp"
version = "0.1.0"
description = "Rammearkitektur AMQP service for making AMQP messages on changing effects in os2mo."
authors = ["Magenta ApS <info@magenta.dk>"]
license = "MPL-2.0"

[tool.poetry.dependencies]
python = "^3.11"
fastramqpi = "^10.1.6"
pydantic = "^1.9.0"
gql = "^3.2.0"
aiosmtplib = "1.1.7"
websockets = "^13.0.1" # for ariadne
pytest-asyncio = "^0.19.0"
pytest-cov = "^4.0.0"
pytest-split = "^0.8.0"
strawberry-graphql = "^0.116.4"
email-validator = "^1.3.0"
uvicorn = "^0.29"
freezegun = "^1.5.1"

[tool.poetry.group.pre-commit.dependencies]
pre-commit = "^4"
ruff = "^0.9"
mypy = "^1"
pyupgrade = "^3"

[tool.poetry.group.dev.dependencies]
ariadne-codegen = "^0.7"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.autopub]
git-username = "MagentaBot"
git-email = "info@magenta.dk"

[tool.pytest.ini_options]
asyncio_mode="auto"

[tool.mypy]
plugins = "pydantic.mypy"

[tool.flake8]
max-line-length = 88
exclude = [
    ".git", "__pycache__", ".mypy_cache", ".pytest_cache", ".venv", ".gitlab"
]

[tool.ariadne-codegen]
# Ideally, the GraphQL client is generated as part of the build process and
# never committed to git. Unfortunately, most of our tools and CI analyses the
# project directly as it is in Git. In the future - when the CI templates
# operate on the built container image - only the definition of the schema and
# queries should be checked in.
#
# The default package name is `graphql_client`. Make it more obvious that the
# files are not to be modified manually.
target_package_name = "autogenerated_graphql_client"
target_package_path = "mo_smtp/"
client_name = "GraphQLClient"
schema_path = "schema.graphql"  # curl -O http://localhost:5000/graphql/v24/schema.graphql
queries_path = "queries.graphql"
plugins = [
    # Return values directly when only a single top field is requested
    "ariadne_codegen.contrib.shorter_results.ShorterResultsPlugin",
]
include_comments = false
[tool.ariadne-codegen.scalars.DateTime]
type = "datetime.datetime"
[tool.ariadne-codegen.scalars.UUID]
type = "uuid.UUID"
