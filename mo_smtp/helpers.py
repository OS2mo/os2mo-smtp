import datetime

from mo_smtp.autogenerated_graphql_client.manager_data import (
    ManagerDataManagersObjectsValidities,
)


def mo_datestring_to_utc(datestring: datetime.datetime | None):
    """
    Returns datetime object at UTC+0

    Notes
    ------
    Mo datestrings are formatted like this: "2023-02-27T00:00:00+01:00"
    This function essentially removes the "+01:00" part, which gives a UTC+0 timestamp.
    """
    if datestring:
        return datestring.replace(tzinfo=None)
    else:
        return None


def extract_current_or_latest_validity(
    validities: list[ManagerDataManagersObjectsValidities],
):
    """
    Check the validity in a list of validities and return the one which
    is either valid today, or has the latest end-date
    """
    if len(validities) == 1:
        return validities[0]
    elif len(validities) == 0:
        raise Exception("Validities is empty")
    else:
        # If any of the validities is valid today, return it
        latest_validity = None
        for val in validities:
            valid_to = mo_datestring_to_utc(val.validity.to)
            valid_from = mo_datestring_to_utc(val.validity.from_)

            if valid_to and valid_from:
                now_utc = datetime.datetime.utcnow()
                if now_utc > valid_from and now_utc < valid_to:
                    return val

            elif not valid_to and valid_from:
                now_utc = datetime.datetime.utcnow()
                if now_utc > valid_from:
                    return val

            # Update latest validity
            if valid_to:
                if latest_validity:
                    latest_valid_to = mo_datestring_to_utc(latest_validity.validity.to)
                    if latest_valid_to and valid_to > latest_valid_to:
                        latest_validity = val
                else:
                    latest_validity = val
            else:
                latest_validity = val

        # Otherwise return the latest
        return latest_validity
