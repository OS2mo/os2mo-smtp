# Generated by ariadne-codegen on 2025-03-05 13:32
# Source: queries.graphql

from uuid import UUID

from .base_model import BaseModel


class GetUserData(BaseModel):
    employees: "GetUserDataEmployees"


class GetUserDataEmployees(BaseModel):
    objects: list["GetUserDataEmployeesObjects"]


class GetUserDataEmployeesObjects(BaseModel):
    validities: list["GetUserDataEmployeesObjectsValidities"]


class GetUserDataEmployeesObjectsValidities(BaseModel):
    name: str
    addresses: list["GetUserDataEmployeesObjectsValiditiesAddresses"]
    engagements: list["GetUserDataEmployeesObjectsValiditiesEngagements"]


class GetUserDataEmployeesObjectsValiditiesAddresses(BaseModel):
    value: str
    address_type: "GetUserDataEmployeesObjectsValiditiesAddressesAddressType"


class GetUserDataEmployeesObjectsValiditiesAddressesAddressType(BaseModel):
    scope: str | None


class GetUserDataEmployeesObjectsValiditiesEngagements(BaseModel):
    org_unit_uuid: UUID


GetUserData.update_forward_refs()
GetUserDataEmployees.update_forward_refs()
GetUserDataEmployeesObjects.update_forward_refs()
GetUserDataEmployeesObjectsValidities.update_forward_refs()
GetUserDataEmployeesObjectsValiditiesAddresses.update_forward_refs()
GetUserDataEmployeesObjectsValiditiesAddressesAddressType.update_forward_refs()
GetUserDataEmployeesObjectsValiditiesEngagements.update_forward_refs()
