# Generated by ariadne-codegen on 2023-08-17 13:58
# Source: queries.graphql

from typing import List, Optional
from uuid import UUID

from .base_model import BaseModel


class GetUserData(BaseModel):
    employees: "GetUserDataEmployees"


class GetUserDataEmployees(BaseModel):
    objects: List["GetUserDataEmployeesObjects"]


class GetUserDataEmployeesObjects(BaseModel):
    objects: List["GetUserDataEmployeesObjectsObjects"]


class GetUserDataEmployeesObjectsObjects(BaseModel):
    name: str
    addresses: List["GetUserDataEmployeesObjectsObjectsAddresses"]
    engagements: List["GetUserDataEmployeesObjectsObjectsEngagements"]


class GetUserDataEmployeesObjectsObjectsAddresses(BaseModel):
    value: str
    address_type: "GetUserDataEmployeesObjectsObjectsAddressesAddressType"


class GetUserDataEmployeesObjectsObjectsAddressesAddressType(BaseModel):
    scope: Optional[str]


class GetUserDataEmployeesObjectsObjectsEngagements(BaseModel):
    org_unit_uuid: UUID


GetUserData.update_forward_refs()
GetUserDataEmployees.update_forward_refs()
GetUserDataEmployeesObjects.update_forward_refs()
GetUserDataEmployeesObjectsObjects.update_forward_refs()
GetUserDataEmployeesObjectsObjectsAddresses.update_forward_refs()
GetUserDataEmployeesObjectsObjectsAddressesAddressType.update_forward_refs()
GetUserDataEmployeesObjectsObjectsEngagements.update_forward_refs()
