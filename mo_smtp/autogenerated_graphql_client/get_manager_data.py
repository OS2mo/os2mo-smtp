# Generated by ariadne-codegen on 2023-08-17 13:58
# Source: queries.graphql

from datetime import datetime
from typing import List, Optional
from uuid import UUID

from pydantic import Field

from .base_model import BaseModel


class GetManagerData(BaseModel):
    managers: "GetManagerDataManagers"


class GetManagerDataManagers(BaseModel):
    objects: List["GetManagerDataManagersObjects"]


class GetManagerDataManagersObjects(BaseModel):
    objects: List["GetManagerDataManagersObjectsObjects"]


class GetManagerDataManagersObjectsObjects(BaseModel):
    employee_uuid: Optional[UUID]
    org_unit_uuid: UUID
    validity: "GetManagerDataManagersObjectsObjectsValidity"


class GetManagerDataManagersObjectsObjectsValidity(BaseModel):
    to: Optional[datetime]
    from_: datetime = Field(alias="from")


GetManagerData.update_forward_refs()
GetManagerDataManagers.update_forward_refs()
GetManagerDataManagersObjects.update_forward_refs()
GetManagerDataManagersObjectsObjects.update_forward_refs()
GetManagerDataManagersObjectsObjectsValidity.update_forward_refs()
